<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      >

    <!-- Add the following 2 lines to the nlog element above, to enable NLog's internal logging
      internalLogLevel="Warn"
      internalLogFile="C:/Portals/<solution>/internalLogfile.txt"
  -->

    <!-- File locations -->
    <variable name="logdir" value="C:\Dev\PanthaRhei.Output\Logs"/>
    <variable name="archivedlogsdir" value="C:\Dev\PanthaRhei.Output\Logs\Archive\${shortdate}"/>

    <!-- Message layouts -->
    <variable name="eventLogLayout"
			  value="${guid:format=D}${newline}${newline}${level}: ${message} ${onexception: ${newline} ${exception:format=toString,stacktrace:maxInnerExceptionLevel=5:separator=\r\n}}" />
    <variable name="defaultLayout"
			  value="${when:when=level==LogLevel.Trace:inner=${level}\: }${date} ${message} ${onexception: ${newline} ${exception:format=toString,stacktrace:maxInnerExceptionLevel=5:separator=\r\n}}" />
    <variable name="verbose" value="${message} ${onexception: ${newline} ${exception:format=toString,stacktrace:maxInnerExceptionLevel=5:separator=\r\n}"/>
    <!--Eventlog settings-->
    <variable name ="eventlogSource" value="default"/>
    <variable name ="eventlogName" value="LiquidVisions"/>
    <variable name ="eventId" value="545"/>

    <!-- Reference to assembly that contains the extensions-->
    <!--<extensions>
        <add assembly="LiquidVisions.Logging.NLog"/>
        <add assembly="Microsoft.ApplicationInsights.NLogTarget" />
    </extensions>-->

    <!-- the targets for the logging -->
    <!-- async="true" means asynchronous logging with the default settings.
       If the default values do not apply, than the asynchronous wrapper (see below) should be used.
       In this case the "async" attribute MUST be removed from the <target> element.-->

    <targets async="true">

        <!-- Example of an asynchronous wrapper (AsyncWrapper) for the 'eventlog' target.
         For more information on aynchronous wrappers see https://github.com/nlog/NLog/wiki/AsyncWrapper-target
         This AsyncWrapper wrappes the 'eventlog' target and can be used if specific values need to be set (the default values have been filled in)
         In the <rules> the writeTo value has to be changed to the name of the AsyncWrapper (in this example "asyncEventLog")-->
        <!--<target name="asyncEventLog"
            xsi:type="AsyncWrapper"
            queueLimit="10000"
            timeToSleepBetweenBatches="50"
            batchSize="200"
            fullBatchSizeWriteLimit="5"
            overflowAction="Discard"
            optimizeBufferReuse="false"
            >-->

        <!-- Closing tag of the aynchronous wrapper for the 'eventlog' target example
         This needs to be under the 'eventlog' target, because the wrapper wraps the 'eventlog' target -->
        <!--</target>-->

        <target name="file"
				xsi:type="File"
				fileName="${logdir}/current.log"
				layout="${defaultLayout}"
				archiveFileName="${archivedlogsdir}\archive{###}.log"
				archiveEvery="Hour"
				archiveNumbering="Rolling"
				maxArchiveFiles="24"
				concurrentWrites="true"
				keepFileOpen="false"
				encoding="iso-8859-2" />

        <target name="webservice"
				xsi:type="LogReceiverService"
				endpointAddress="http://localhost:5000/LogReceiver.svc" />

        <target name="debugger"
				xsi:type="Debugger"
				layout="${defaultLayout}" />

        <target type="ApplicationInsightsTarget" name="ai" />
        <target xsi:type="ColoredConsole" layout="${verbose}" name="console" />
    </targets>

    <rules>
        <!-- Exception logger rules -->
        <logger name="ExceptionLogger"
				minlevel="Warn"
				final="true"
				writeTo="file, console"
    />

        <!-- Authentication logger rules-->
        <logger name="AuthenticationLogger"
				level="Debug"
			   final="true"
				writeTo="eventlog"
    />

        <!-- Default logger rules-->
        <logger name="DefaultLogger"
				minlevel="Trace"
				maxlevel="Fatal"
				writeTo="debugger,console,file"
    />

    </rules>
</nlog>
