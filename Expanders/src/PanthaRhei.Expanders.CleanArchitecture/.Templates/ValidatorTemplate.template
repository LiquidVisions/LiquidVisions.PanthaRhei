{{-
name = action + entity.name;
if action == "Get"
    name = action + entity.pluralized_name;
end
if action == "GetById"
    name = "Get" + entity.name + "ById"
end

model_postfix = "Command";
if action == "Get" || action == "GetById"
    model_postfix = "Query";
end
-}}
using FluentValidation;
using {{using}}.Client.RequestModels.{{entity.pluralized_name}};

namespace {{name_space}}.Validators.{{entity.pluralized_name}}
{
    internal class {{name}}Validator : AbstractValidator<{{name}}{{model_postfix}}>, IValidator<{{name}}{{model_postfix}}>
    {
        public {{name}}Validator()
        {
            #region ns-custom-validations
            #endregion ns-custom-validations
        }

        public new Response Validate({{name}}{{model_postfix}} objectToValidate) => 
            base.Validate(objectToValidate)
                .ToResponse();
    }
}
