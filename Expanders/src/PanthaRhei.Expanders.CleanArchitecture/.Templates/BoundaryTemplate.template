{{-
name = entity.name
if action_type == "Get"
    name = entity.name | pluralize
end

model_type = "RequestModel"

class_name = action_type + name + "Boundary"
model_name = action_type + name + model_type
if action_type == "GetById"
    class_name = "Get" + name + "ById" + "Boundary"
    model_name = "Get" + name + "ById" + model_type
end

-}}
using System.Threading.Tasks;
using {{component_fullname component 'Interactors'}};
using {{component_fullname component 'Boundaries'}};
using {{component_fullname component 'RequestModels' entity.name | pluralize}};

namespace {{component_fullname component 'Boundaries' entity.name | pluralize}}
{
    internal class {{class_name}} : IBoundary<{{model_name}}>
    {
        private readonly IInteractor<{{model_name}}> interactor;

        public {{class_name}}(IInteractor<{{model_name}}> interactor)
        {
            this.interactor = interactor;
        }

        public async Task Execute({{model_name}} requestModel, IPresenter presenter) =>
            presenter.Response = await interactor.ExecuteUseCase(requestModel);
    }
}
