using {{entity_name_space}};
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace {{name_space}}.Configuration
{
    public class {{entity.name}}Configuration : IEntityTypeConfiguration<{{entity.name}}>
    {
        public void Configure(EntityTypeBuilder<{{entity.name}}> builder)
        {
            {{~if keys.size > 0~}}
            builder.HasKey(x => new { x.{{keys | array.join", x."}} });
            {{~end~}}
            {{~if indexes.size > 0~}}
            
            builder.HasIndex(x => new { x.{{indexes | array.join ", x."}} });
            {{~end~}}
            
            {{~for field in entity.fields | array.sort 'order'~}}
            {{~if field.reference_id == null~}}
            builder.Property(x => x.{{ field.name }})
                {{~if field.size != null~}}
                .HasMaxLength({{field.size}})
                {{~end~}}
                .IsRequired({{field.required}});
            
            {{~end~}}
            {{~if fieldbehaviour == 'abstract'~}}
            builder.Ignore(x => x.{{field.name}});

            {{~end~}}
            {{~end~}}
            {{~for r in entity.relations-}}
            {{-if r.cardinality == "WithOne"~}}
            builder.HasOne(x => x.{{r.key.name}})
            {{~else~}}
            builder.HasMany(x => x.{{r.key.name}})
            {{~end~}}
            {{~if r.with_cardinality == "WithOne"~}}
                .WithOne(x => x.{{r.with_foreign_entity.name}})
            {{~if r.with_cardinality == "WithOne" && r.cardinality == "WithOne"~}}
                .HasForeignKey<{{r.entity.name}}>("{{r.entity.name}}Id")
            {{~end~}}
                .OnDelete(DeleteBehavior.Cascade);
                {{~else~}}
                .WithMany(x => x.{{r.with_foreign_entity_key.name }})
                {{~if r.required~}}
                .IsRequired()
                {{~end~}}
                .OnDelete(DeleteBehavior.NoAction);
                {{~end~}}

            {{~end~}}

            #region ns-custom-configuration
            #endregion ns-custom-configuration
        }
    }
}